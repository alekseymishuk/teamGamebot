import { Telegraf, Context } from 'telegraf';
import { prisma } from '../db';
import { generateGameCode } from '../utils/generateGameCode';

export async function handleCreateGame(ctx: Context) {
  const userId = ctx.from!.id.toString();
  const username = ctx.from!.username || ctx.from!.first_name;

  const code = generateGameCode();

  // –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —É—á–∞—Å—Ç–Ω–∏–∫
  const existing = await prisma.participant.findUnique({
    where: { telegramId: userId },
  });

  if (existing) {
    return ctx.reply('–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –∏–≥—Ä–µ. –ò—Å–ø–æ–ª—å–∑—É–π /games —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫.');
  }

  // —Å–æ–∑–¥–∞—ë–º –∏–≥—Ä—É –∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
  const game = await prisma.game.create({
    data: {
      code,
      participants: {
        create: {
          telegramId: userId,
          username,
          taskText: '',
          isAdmin: true,
        },
      },
    },
  });

  await ctx.reply(`üÜï –ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–ö–æ–¥: ${code}\n–°—Å—ã–ª–∫–∞: https://t.me/${ctx.botInfo?.username}?start=${code}`);
  await ctx.reply(`üë§ –¢—ã ‚Äî –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —ç—Ç–æ–π –∏–≥—Ä—ã.\n\n–ò—Å–ø–æ–ª—å–∑—É–π /games —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä.`);
  
}


export function setupNewGame(bot: Telegraf) {
  bot.command('new_game', handleCreateGame);
}