import { Telegraf, Context } from 'telegraf';
import { prisma } from '../db';
import { handleDeleteGame } from './gameManagement';

export function setupEndGame(bot: Telegraf) {
  bot.command('end_game', async (ctx: Context) => {
    const telegramId = ctx.from?.id.toString();
    if (!telegramId) return;

    const admin = await prisma.participant.findUnique({
      where: { telegramId },
    });

    if (!admin || !admin.isAdmin) {
      return ctx.reply('‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É.');
    }

    const gameId = admin.gameId;

    await prisma.game.update({
      where: { id: gameId },
      data: { status: 'ENDED' },
    });

    const participants = await prisma.participant.findMany({
      where: { gameId },
    });

    const guesses = await prisma.guess.findMany({
      where: {
        OR: [
          { guesserId: { in: participants.map(p => p.telegramId) } },
          { targetId: { in: participants.map(p => p.telegramId) } },
        ],
      },
    });

    const summaryLines: string[] = [];

    for (const [index, participant] of participants.entries()) {
      const name = participant.username || '–±–µ–∑_–∏–º–µ–Ω–∏';

      const correctGuesses = guesses.filter(
        g => g.guesserId === participant.telegramId && g.isCorrect
      ).length;

      const taskCompleted = participant.taskCompleted ? '‚úÖ' : '‚ùå';

      // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—Ç–æ –ø–æ–ª—É—á–∏–ª –∑–∞–¥–∞–Ω–∏–µ –æ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
      const taskReceiver = participants.find(
        p => p.receivedTask === participant.taskText
      );

      const star = taskReceiver ? '‚≠ê' : '';

      summaryLines.push(
        `${index + 1}. ${name} ${taskCompleted} | –£–≥–∞–¥–∞–ª: ${correctGuesses} ${star}`
      );
    }

    const summary = summaryLines.join('\n');

    for (const p of participants) {
      try {
        await ctx.telegram.sendMessage(
          p.telegramId,
          `üèÅ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n${summary}`
        );
      } catch (err) {
        console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç @${p.username}:`, err);
      }
    }
    handleDeleteGame(ctx);
  });
}
