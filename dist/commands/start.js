"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupStart = setupStart;
const db_1 = require("../db");
const mainMenu_1 = require("../ui/mainMenu");
const addTask_1 = require("./addTask");
function setupStart(bot) {
    bot.start(async (ctx) => {
        const userId = ctx.from.id.toString();
        const username = ctx.from.username || ctx.from.first_name;
        const code = ctx.startPayload?.trim().toUpperCase();
        if (!code) {
            return ctx.reply('–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:', mainMenu_1.mainMenuKeyboard);
        }
        const game = await db_1.prisma.game.findUnique({ where: { code } });
        if (!game) {
            return ctx.reply('‚õî –ò–≥—Ä–∞ —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å —Å—Å—ã–ª–∫—É –∏–ª–∏ –∫–æ–¥.');
        }
        const existing = await db_1.prisma.participant.findFirst({
            where: {
                telegramId: userId,
                gameId: game.id,
            },
        });
        if (existing) {
            if (!existing.taskText || existing.taskText.trim() === '') {
                ctx.reply(`üëã –¢—ã —É–∂–µ –≤ –∏–≥—Ä–µ —Å –∫–æ–¥–æ–º ${code}`);
                (0, addTask_1.handleAddTask)(ctx); // —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏—è
                return;
            }
            else {
                return ctx.reply(`üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –∏–≥—Ä—É —Å –∫–æ–¥–æ–º ${code}!`, mainMenu_1.mainMenuKeyboard);
            }
        }
        // –¥–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –∏–≥—Ä—É
        await db_1.prisma.participant.create({
            data: {
                telegramId: userId,
                username,
                taskText: '',
                isAdmin: false,
                gameId: game.id,
            },
        });
        ctx.reply(`‚úÖ –¢—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ —Å –∫–æ–¥–æ–º *${code}*!`);
        (0, addTask_1.handleAddTask)(ctx); // —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏—è
    });
}
